<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="16807" started-at="2024-08-12T10:11:16Z" finished-at="2024-08-12T10:11:33Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="16807" started-at="2024-08-12T10:11:16Z" finished-at="2024-08-12T10:11:33Z">
      <class name="Testcases.Login_DataDriven">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Testcases.Login_DataDriven@4b952a2d]" name="setUp" is-config="true" duration-ms="10823" started-at="2024-08-12T15:41:16Z" finished-at="2024-08-12T15:41:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="loginTest_DataDriven(java.lang.String, java.lang.String)[pri:0, instance:Testcases.Login_DataDriven@4b952a2d]" name="loginTest_DataDriven" duration-ms="1219" started-at="2024-08-12T15:41:29Z" data-provider="Login_Test_Data" finished-at="2024-08-12T15:41:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sathish11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[V@123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest_DataDriven -->
        <test-method status="PASS" signature="loginTest_DataDriven(java.lang.String, java.lang.String)[pri:0, instance:Testcases.Login_DataDriven@4b952a2d]" name="loginTest_DataDriven" duration-ms="831" started-at="2024-08-12T15:41:30Z" data-provider="Login_Test_Data" finished-at="2024-08-12T15:41:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sathish12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[V@123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest_DataDriven -->
        <test-method status="PASS" signature="loginTest_DataDriven(java.lang.String, java.lang.String)[pri:0, instance:Testcases.Login_DataDriven@4b952a2d]" name="loginTest_DataDriven" duration-ms="780" started-at="2024-08-12T15:41:31Z" data-provider="Login_Test_Data" finished-at="2024-08-12T15:41:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sathish1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[V@123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest_DataDriven -->
        <test-method status="FAIL" signature="loginTest_DataDriven(java.lang.String, java.lang.String)[pri:0, instance:Testcases.Login_DataDriven@4b952a2d]" name="loginTest_DataDriven" duration-ms="71" started-at="2024-08-12T15:41:32Z" data-provider="Login_Test_Data" finished-at="2024-08-12T15:41:32Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
	at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
	at com.sun.proxy.$Proxy16.sendKeys(Unknown Source)
	at pageObjects.LoginPage.setUserName(LoginPage.java:26)
	at Testcases.Login_DataDriven.loginTest_DataDriven(Login_DataDriven.java:17)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest_DataDriven -->
        <test-method status="PASS" signature="close()[pri:0, instance:Testcases.Login_DataDriven@4b952a2d]" name="close" is-config="true" duration-ms="435" started-at="2024-08-12T15:41:32Z" finished-at="2024-08-12T15:41:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- Testcases.Login_DataDriven -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
